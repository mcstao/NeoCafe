openapi: 3.0.3
info:
  title: DRF NeoCafe API Project
  version: '0.1'
  description: NeoCafe
paths:
  /api/schema/:
    get:
      operationId: api_schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - api
      security:
      - tokenAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /branches/branches/:
    get:
      operationId: branches_branches_list
      tags:
      - branches
      security:
      - tokenAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Branch'
          description: ''
    post:
      operationId: branches_branches_create
      tags:
      - branches
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Branch'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Branch'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Branch'
        required: true
      security:
      - tokenAuth: []
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Branch'
          description: ''
  /branches/branches/{id}/:
    get:
      operationId: branches_branches_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this branch.
        required: true
      tags:
      - branches
      security:
      - tokenAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Branch'
          description: ''
    put:
      operationId: branches_branches_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this branch.
        required: true
      tags:
      - branches
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Branch'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Branch'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Branch'
        required: true
      security:
      - tokenAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Branch'
          description: ''
    patch:
      operationId: branches_branches_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this branch.
        required: true
      tags:
      - branches
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBranch'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBranch'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBranch'
      security:
      - tokenAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Branch'
          description: ''
    delete:
      operationId: branches_branches_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this branch.
        required: true
      tags:
      - branches
      security:
      - tokenAuth: []
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /users/login/admin/:
    post:
      operationId: users_login_admin_create
      description: Этот эндпоинт служит для входа админа
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminLogin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminLogin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdminLogin'
        required: true
      security:
      - tokenAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                example:
                  refresh: token
                  access: token
          description: ''
  /users/login/barista/:
    post:
      operationId: users_login_barista_create
      description: Этот эндпоинт предназначен для входа бармена.
      tags:
      - users
      requestBody:
        content:
          content:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
              required:
              - email
      security:
      - tokenAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                example:
                  message: Введите 4-значный код, отправленный на почту example@gmail.com
                  pre_token: your_pre_token_here
          description: ''
  /users/login/barista/confirm/:
    post:
      operationId: users_login_barista_confirm_create
      description: Этот эндпоинт служит для подтверждении входа сотрудников по коду
      tags:
      - users
      requestBody:
        content:
          headers:
            schema:
              type: object
              properties:
                Authorization: pre_token
              required:
              - Authorization
              example:
                Authorization: pre_token
          content:
            schema:
              type: object
              properties:
                otp:
                  type: string
                email:
                  type: string
                  format: email
              required:
              - otp
              - email
      security:
      - tokenAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                example:
                  refresh: token
                  access: token
          description: ''
  /users/login/customer/:
    post:
      operationId: users_login_customer_create
      description: Этот эндпоинт предназначен для входа клиентов.
      tags:
      - users
      requestBody:
        content:
          content:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
              required:
              - email
      security:
      - tokenAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                example:
                  message: Введите 4-значный код, отправленный на почту example@gmail.com
                  pre_token: your_pre_token_here
          description: ''
  /users/login/customer/confirm/:
    post:
      operationId: users_login_customer_confirm_create
      description: Этот эндпоинт служит для подтверждении входа клиентов по коду
      tags:
      - users
      requestBody:
        content:
          headers:
            schema:
              type: object
              properties:
                Authorization: pre_token
              required:
              - Authorization
              example:
                Authorization: pre_token
          content:
            schema:
              type: object
              properties:
                otp:
                  type: string
                email:
                  type: string
                  format: email
              required:
              - otp
              - email
      security:
      - tokenAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                example:
                  refresh: token
                  access: token
          description: ''
  /users/login/waiter/:
    post:
      operationId: users_login_waiter_create
      description: Этот эндпоинт предназначен для входа официантов.
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WaiterLogin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WaiterLogin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WaiterLogin'
        required: true
      security:
      - tokenAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                example:
                  message: Введите 4-значный код, отправленный на почту example@gmail.com
                  pre_token: your_pre_token_here
          description: ''
  /users/login/waiter/confirm/:
    post:
      operationId: users_login_waiter_confirm_create
      description: Этот эндпоинт служит для подтверждении входа сотрудников по коду
      tags:
      - users
      requestBody:
        content:
          headers:
            schema:
              type: object
              properties:
                Authorization: pre_token
              required:
              - Authorization
              example:
                Authorization: pre_token
          content:
            schema:
              type: object
              properties:
                otp:
                  type: string
                email:
                  type: string
                  format: email
              required:
              - otp
              - email
      security:
      - tokenAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                example:
                  refresh: token
                  access: token
          description: ''
  /users/register/customer/:
    post:
      operationId: users_register_customer_create
      description: Этот эндпоинт предназначен для регистрации клиентов.
      tags:
      - users
      requestBody:
        content:
          content:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
              required:
              - email
      security:
      - tokenAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                example:
                  message: Введите 4-значный код, отправленный на почту example@gmail.com
                  pre_token: your_pre_token_here
          description: ''
  /users/resend-code/:
    get:
      operationId: users_resend_code_retrieve
      description: Повторная отправка кода Ожидается, что клиент передаст pre_token
        пользователя в заголовке Authorization.
      tags:
      - users
      security:
      - tokenAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                example:
                  detail: Код был отправлен заново
          description: ''
  /users/verify/email/:
    post:
      operationId: users_verify_email_create
      description: Этот эндпоинт служит для подтверждении регистрации пользователей
      tags:
      - users
      requestBody:
        content:
          headers:
            schema:
              type: object
              properties:
                Authorization: pre_token
              required:
              - Authorization
              example:
                Authorization: pre_token
          content:
            schema:
              type: object
              properties:
                otp:
                  type: string
                email:
                  type: string
                  format: email
              required:
              - otp
              - email
      security:
      - tokenAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                example:
                  message: Поздравляем, ваш адрес электронной почты подтвержден!
          description: ''
components:
  schemas:
    AdminLogin:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required:
      - password
      - username
    Branch:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        schedule:
          $ref: '#/components/schemas/Schedule'
        image:
          type: string
          format: uri
          nullable: true
        name:
          type: string
          maxLength: 100
        address:
          type: string
        phone_number:
          type: string
          maxLength: 128
        link_to_map:
          type: string
          format: uri
          maxLength: 200
        counts_of_tables:
          type: integer
      required:
      - address
      - id
      - link_to_map
      - phone_number
      - schedule
    PatchedBranch:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        schedule:
          $ref: '#/components/schemas/Schedule'
        image:
          type: string
          format: uri
          nullable: true
        name:
          type: string
          maxLength: 100
        address:
          type: string
        phone_number:
          type: string
          maxLength: 128
        link_to_map:
          type: string
          format: uri
          maxLength: 200
        counts_of_tables:
          type: integer
    Schedule:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        description:
          type: string
          nullable: true
        monday:
          type: boolean
        monday_start_time:
          type: string
          format: time
          nullable: true
        monday_end_time:
          type: string
          format: time
          nullable: true
        tuesday:
          type: boolean
        tuesday_start_time:
          type: string
          format: time
          nullable: true
        tuesday_end_time:
          type: string
          format: time
          nullable: true
        wednesday:
          type: boolean
        wednesday_start_time:
          type: string
          format: time
          nullable: true
        wednesday_end_time:
          type: string
          format: time
          nullable: true
        thursday:
          type: boolean
        thursday_start_time:
          type: string
          format: time
          nullable: true
        thursday_end_time:
          type: string
          format: time
          nullable: true
        friday:
          type: boolean
        friday_start_time:
          type: string
          format: time
          nullable: true
        friday_end_time:
          type: string
          format: time
          nullable: true
        saturday:
          type: boolean
        saturday_start_time:
          type: string
          format: time
          nullable: true
        saturday_end_time:
          type: string
          format: time
          nullable: true
        sunday:
          type: boolean
        sunday_start_time:
          type: string
          format: time
          nullable: true
        sunday_end_time:
          type: string
          format: time
          nullable: true
      required:
      - id
      - title
    WaiterLogin:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required:
      - password
      - username
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
