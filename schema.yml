openapi: 3.0.3
info:
  title: DRF NeoCafe API Project
  version: '0.1'
  description: NeoCafe
paths:
  /api/schema/:
    get:
      operationId: api_schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - api
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /barista/profile/:
    get:
      operationId: barista_profile_retrieve
      tags:
      - barista
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaristaProfile'
          description: ''
  /branches/:
    get:
      operationId: branches_list
      tags:
      - branches
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Branch'
          description: ''
    post:
      operationId: branches_create
      tags:
      - branches
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Branch'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Branch'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Branch'
        required: true
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Branch'
          description: ''
  /branches/{id}/:
    get:
      operationId: branches_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this branch.
        required: true
      tags:
      - branches
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Branch'
          description: ''
    put:
      operationId: branches_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this branch.
        required: true
      tags:
      - branches
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Branch'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Branch'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Branch'
        required: true
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Branch'
          description: ''
    patch:
      operationId: branches_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this branch.
        required: true
      tags:
      - branches
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBranch'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBranch'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBranch'
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Branch'
          description: ''
    delete:
      operationId: branches_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this branch.
        required: true
      tags:
      - branches
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /branches/branches/menu/:
    get:
      operationId: branches_branches_menu_list
      tags:
      - branches
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Menu'
          description: ''
  /branches/branches/menu/category/{category_id}/:
    get:
      operationId: branches_branches_menu_category_list
      description: Get a list of menu items in a branch filtered by category.
      summary: Branch Menu Items by Category
      parameters:
      - in: path
        name: category_id
        schema:
          type: integer
        required: true
      tags:
      - branches
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Menu'
          description: ''
  /customers/change-branch/:
    post:
      operationId: customers_change_branch_create
      description: Эндпоинт для смены филиала
      summary: Change branch
      tags:
      - customers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeBranch'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChangeBranch'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChangeBranch'
        required: true
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeBranchResponse200'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeBranchResponse400'
          description: ''
  /customers/check-item/:
    post:
      operationId: customers_check_item_create
      description: Проверка на возможность изготовление чего-то
      summary: Проверяет можно ли изготовить
      tags:
      - customers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckIfItemCanBeMade'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CheckIfItemCanBeMade'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CheckIfItemCanBeMade'
        required: true
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemCanBeMadeResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemCannotBeMadeResponse'
          description: ''
  /customers/compatible-items/{item_id}/:
    get:
      operationId: customers_compatible_items_list
      description: Рекомендация
      summary: Рекомендации к заказу
      parameters:
      - in: path
        name: item_id
        schema:
          type: integer
        required: true
      tags:
      - customers
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MenuItemDetail'
          description: ''
  /customers/my-id/:
    get:
      operationId: customers_my_id_retrieve
      description: Выдает ID пользователя.
      summary: ID пользователя
      tags:
      - customers
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserIdResponse'
          description: ''
  /customers/orders/:
    get:
      operationId: customers_orders_retrieve
      description: Заказы пользователя
      summary: Заказы пользователя
      tags:
      - customers
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserOrders'
          description: ''
  /customers/orders/{id}/:
    get:
      operationId: unique_operation_id_for_my_order_detail_view
      description: Деталь заказа
      summary: Детали заказа
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - customers
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
  /customers/popular-items/:
    get:
      operationId: customers_popular_items_list
      description: Самое популярное
      summary: Самое популярное
      tags:
      - customers
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MenuItemDetail'
          description: ''
  /customers/profile/:
    get:
      operationId: customers_profile_retrieve
      tags:
      - customers
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerProfile'
          description: ''
  /customers/profile/edit/:
    put:
      operationId: customers_profile_edit_update
      tags:
      - customers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerEditProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomerEditProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomerEditProfile'
        required: true
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerEditProfile'
          description: ''
  /customers/search/:
    get:
      operationId: customers_search_list
      tags:
      - customers
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Menu'
          description: ''
  /employees/staff/{id}/:
    get:
      operationId: employees_staff_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - employees
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaffCreate'
          description: ''
    put:
      operationId: employees_staff_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - employees
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StaffCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StaffCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StaffCreate'
        required: true
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaffCreate'
          description: ''
    patch:
      operationId: employees_staff_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - employees
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStaffCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStaffCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStaffCreate'
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaffCreate'
          description: ''
    delete:
      operationId: employees_staff_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - employees
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /employees/staff/create/:
    post:
      operationId: employees_staff_create_create
      tags:
      - employees
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StaffCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StaffCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StaffCreate'
        required: true
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaffCreate'
          description: ''
  /employees/staff/list/:
    get:
      operationId: employees_staff_list_list
      tags:
      - employees
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StaffCreate'
          description: ''
  /menu/categories/:
    get:
      operationId: menu_categories_list
      tags:
      - menu
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
          description: ''
    post:
      operationId: menu_categories_create
      tags:
      - menu
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
  /menu/categories/{id}/:
    get:
      operationId: menu_categories_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - menu
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    put:
      operationId: menu_categories_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - menu
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    patch:
      operationId: menu_categories_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - menu
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    delete:
      operationId: menu_categories_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - menu
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /menu/extra-items/:
    get:
      operationId: menu_extra_items_list
      tags:
      - menu
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExtraItem'
          description: ''
    post:
      operationId: menu_extra_items_create
      tags:
      - menu
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExtraItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExtraItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExtraItem'
        required: true
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtraItem'
          description: ''
  /menu/extra-items/{id}/:
    get:
      operationId: menu_extra_items_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this extra item.
        required: true
      tags:
      - menu
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtraItem'
          description: ''
    put:
      operationId: menu_extra_items_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this extra item.
        required: true
      tags:
      - menu
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExtraItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExtraItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExtraItem'
        required: true
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtraItem'
          description: ''
    patch:
      operationId: menu_extra_items_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this extra item.
        required: true
      tags:
      - menu
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedExtraItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedExtraItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedExtraItem'
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtraItem'
          description: ''
    delete:
      operationId: menu_extra_items_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this extra item.
        required: true
      tags:
      - menu
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /menu/ingredients/:
    get:
      operationId: menu_ingredients_list
      tags:
      - menu
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ingredient'
          description: ''
    post:
      operationId: menu_ingredients_create
      tags:
      - menu
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ingredient'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Ingredient'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Ingredient'
        required: true
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ingredient'
          description: ''
  /menu/ingredients/{id}/:
    get:
      operationId: menu_ingredients_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this ingredient.
        required: true
      tags:
      - menu
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ingredient'
          description: ''
    put:
      operationId: menu_ingredients_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this ingredient.
        required: true
      tags:
      - menu
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ingredient'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Ingredient'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Ingredient'
        required: true
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ingredient'
          description: ''
    patch:
      operationId: menu_ingredients_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this ingredient.
        required: true
      tags:
      - menu
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedIngredient'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedIngredient'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedIngredient'
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ingredient'
          description: ''
    delete:
      operationId: menu_ingredients_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this ingredient.
        required: true
      tags:
      - menu
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /menu/menus/:
    get:
      operationId: menu_menus_list
      tags:
      - menu
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Menu'
          description: ''
    post:
      operationId: menu_menus_create
      tags:
      - menu
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Menu'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Menu'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Menu'
        required: true
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Menu'
          description: ''
  /menu/menus/{id}/:
    get:
      operationId: menu_menus_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this menu.
        required: true
      tags:
      - menu
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Menu'
          description: ''
    put:
      operationId: menu_menus_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this menu.
        required: true
      tags:
      - menu
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Menu'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Menu'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Menu'
        required: true
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Menu'
          description: ''
    patch:
      operationId: menu_menus_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this menu.
        required: true
      tags:
      - menu
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMenu'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMenu'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMenu'
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Menu'
          description: ''
    delete:
      operationId: menu_menus_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this menu.
        required: true
      tags:
      - menu
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /orders/create-customer-order/:
    post:
      operationId: orders_create_customer_order_create
      description: Создает заказ клиента
      tags:
      - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderCustomer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderCustomer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderCustomer'
        required: true
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderCustomer'
          description: ''
  /orders/create-order/:
    post:
      operationId: orders_create_order_create
      description: Создает заказ
      tags:
      - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderStaff'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderStaff'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderStaff'
        required: true
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderStaff'
          description: ''
  /orders/order-list/:
    get:
      operationId: orders_order_list_list
      tags:
      - orders
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderDetailedList'
          description: ''
  /orders/remove-order-item/:
    delete:
      operationId: orders_remove_order_item_destroy
      description: Удаляет пункт из заказа.
      tags:
      - orders
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /orders/reorder/:
    get:
      operationId: orders_reorder_retrieve
      description: Повторно создает заказ по его идентификатору.
      tags:
      - orders
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderStaff'
          description: ''
  /orders/reorder-info/:
    get:
      operationId: orders_reorder_info_retrieve
      description: Предоставляет информацию для повторного заказа.
      tags:
      - orders
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /orders/tables/:
    get:
      operationId: orders_tables_list
      tags:
      - orders
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Table'
          description: ''
    post:
      operationId: orders_tables_create
      tags:
      - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Table'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Table'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Table'
        required: true
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Table'
          description: ''
  /orders/tables/{id}/:
    get:
      operationId: orders_tables_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - orders
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TableDetail'
          description: ''
  /orders/tables/branch/{branch_id}/:
    get:
      operationId: orders_tables_branch_list
      parameters:
      - in: path
        name: branch_id
        schema:
          type: integer
        required: true
      tags:
      - orders
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Table'
          description: ''
  /orders/update-customer-order/{order_id}/:
    patch:
      operationId: orders_update_customer_order_partial_update
      parameters:
      - in: path
        name: order_id
        schema:
          type: integer
        required: true
      tags:
      - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrderCustomer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrderCustomer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrderCustomer'
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderCustomer'
          description: ''
  /orders/update-order/{order_id}/:
    patch:
      operationId: orders_update_order_partial_update
      parameters:
      - in: path
        name: order_id
        schema:
          type: integer
        required: true
      tags:
      - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrderStaff'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrderStaff'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrderStaff'
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderStaff'
          description: ''
  /storage/:
    get:
      operationId: storage_list
      tags:
      - storage
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InventoryItem'
          description: ''
    post:
      operationId: storage_create
      tags:
      - storage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InventoryItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InventoryItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InventoryItem'
        required: true
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryItem'
          description: ''
  /storage/{id}/:
    get:
      operationId: storage_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this inventory item.
        required: true
      tags:
      - storage
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryItem'
          description: ''
    put:
      operationId: storage_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this inventory item.
        required: true
      tags:
      - storage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InventoryItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InventoryItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InventoryItem'
        required: true
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryItem'
          description: ''
    patch:
      operationId: storage_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this inventory item.
        required: true
      tags:
      - storage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedInventoryItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedInventoryItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedInventoryItem'
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryItem'
          description: ''
    delete:
      operationId: storage_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this inventory item.
        required: true
      tags:
      - storage
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /users/login/admin/:
    post:
      operationId: users_login_admin_create
      description: Этот эндпоинт служит для входа админа
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminLogin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminLogin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdminLogin'
        required: true
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                example:
                  refresh: token
                  access: token
          description: ''
  /users/login/barista/:
    post:
      operationId: users_login_barista_create
      description: Этот эндпоинт предназначен для входа бармена.
      tags:
      - users
      requestBody:
        content:
          content:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
              required:
              - email
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                example:
                  message: Введите 4-значный код, отправленный на почту example@gmail.com
                  pre_token: your_pre_token_here
          description: ''
  /users/login/barista/confirm/:
    post:
      operationId: users_login_barista_confirm_create
      description: Этот эндпоинт служит для подтверждении входа сотрудников по коду
      tags:
      - users
      requestBody:
        content:
          headers:
            schema:
              type: object
              properties:
                Authorization: pre_token
              required:
              - Authorization
              example:
                Authorization: pre_token
          content:
            schema:
              type: object
              properties:
                otp:
                  type: string
                email:
                  type: string
                  format: email
              required:
              - otp
              - email
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                example:
                  refresh: token
                  access: token
          description: ''
  /users/login/customer/:
    post:
      operationId: users_login_customer_create
      description: Этот эндпоинт предназначен для входа клиентов.
      tags:
      - users
      requestBody:
        content:
          content:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
              required:
              - email
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                example:
                  message: Введите 4-значный код, отправленный на почту example@gmail.com
                  pre_token: your_pre_token_here
          description: ''
  /users/login/customer/confirm/:
    post:
      operationId: users_login_customer_confirm_create
      description: Этот эндпоинт служит для подтверждении входа клиентов по коду
      tags:
      - users
      requestBody:
        content:
          headers:
            schema:
              type: object
              properties:
                Authorization: pre_token
              required:
              - Authorization
              example:
                Authorization: pre_token
          content:
            schema:
              type: object
              properties:
                otp:
                  type: string
                email:
                  type: string
                  format: email
              required:
              - otp
              - email
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                example:
                  refresh: token
                  access: token
          description: ''
  /users/login/waiter/:
    post:
      operationId: users_login_waiter_create
      description: Этот эндпоинт предназначен для входа официантов.
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WaiterLogin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WaiterLogin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WaiterLogin'
        required: true
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                example:
                  message: Введите 4-значный код, отправленный на почту example@gmail.com
                  pre_token: your_pre_token_here
          description: ''
  /users/login/waiter/confirm/:
    post:
      operationId: users_login_waiter_confirm_create
      description: Этот эндпоинт служит для подтверждении входа сотрудников по коду
      tags:
      - users
      requestBody:
        content:
          headers:
            schema:
              type: object
              properties:
                Authorization: pre_token
              required:
              - Authorization
              example:
                Authorization: pre_token
          content:
            schema:
              type: object
              properties:
                otp:
                  type: string
                email:
                  type: string
                  format: email
              required:
              - otp
              - email
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                example:
                  refresh: token
                  access: token
          description: ''
  /users/register/customer/:
    post:
      operationId: users_register_customer_create
      description: Этот эндпоинт предназначен для регистрации клиентов.
      tags:
      - users
      requestBody:
        content:
          content:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
              required:
              - email
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                example:
                  message: Введите 4-значный код, отправленный на почту example@gmail.com
                  pre_token: your_pre_token_here
          description: ''
  /users/resend-code/:
    get:
      operationId: users_resend_code_retrieve
      description: Повторная отправка кода Ожидается, что клиент передаст pre_token
        пользователя в заголовке Authorization.
      tags:
      - users
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                example:
                  detail: Код был отправлен заново
          description: ''
  /users/verify/email/:
    post:
      operationId: users_verify_email_create
      description: Этот эндпоинт служит для подтверждении регистрации пользователей
      tags:
      - users
      requestBody:
        content:
          headers:
            schema:
              type: object
              properties:
                Authorization: pre_token
              required:
              - Authorization
              example:
                Authorization: pre_token
          content:
            schema:
              type: object
              properties:
                otp:
                  type: string
                email:
                  type: string
                  format: email
              required:
              - otp
              - email
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                example:
                  message: Поздравляем, ваш адрес электронной почты подтвержден!
                  refresh: token
                  access: token
          description: ''
  /waiters/profile/:
    get:
      operationId: waiters_profile_retrieve
      tags:
      - waiters
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WaiterProfile'
          description: ''
components:
  schemas:
    AdminLogin:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required:
      - password
      - username
    BaristaProfile:
      type: object
      properties:
        email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        first_name:
          type: string
          nullable: true
          maxLength: 255
        birth_date:
          type: string
          format: date
          nullable: true
        schedule:
          allOf:
          - $ref: '#/components/schemas/EmployeeSchedule'
          readOnly: true
      required:
      - schedule
    Branch:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        schedule:
          $ref: '#/components/schemas/Schedule'
        image:
          type: string
          format: uri
          nullable: true
        image_2:
          type: string
          format: uri
          nullable: true
        image_3:
          type: string
          format: uri
          nullable: true
        image_4:
          type: string
          format: uri
          nullable: true
        image_5:
          type: string
          format: uri
          nullable: true
        name:
          type: string
          maxLength: 100
        address:
          type: string
        phone_number:
          type: string
          maxLength: 128
        link_to_map:
          type: string
          format: uri
          maxLength: 200
        counts_of_tables:
          type: integer
      required:
      - address
      - id
      - link_to_map
      - name
      - phone_number
      - schedule
    Category:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
          minLength: 3
        image:
          type: string
          format: uri
          nullable: true
          title: Фото категории
      required:
      - id
    CategoryEnum:
      enum:
      - Готовые продукты
      - Сырье
      type: string
      description: |-
        * `Готовые продукты` - Готовые продукты
        * `Сырье` - Сырье
    ChangeBranch:
      type: object
      properties:
        branch_id:
          type: integer
      required:
      - branch_id
    ChangeBranchResponse200:
      type: object
      properties:
        message:
          type: string
      required:
      - message
    ChangeBranchResponse400:
      type: object
      properties:
        message:
          type: string
      required:
      - message
    CheckIfItemCanBeMade:
      type: object
      properties:
        menu_id:
          type: integer
          description: The ID of the menu item.
        branch_id:
          type: integer
          description: The ID of the branch.
        quantity:
          type: integer
          default: 1
          description: The quantity of the menu item.
      required:
      - branch_id
      - menu_id
    CustomerEditProfile:
      type: object
      properties:
        first_name:
          type: string
        email:
          type: string
          format: email
          readOnly: true
        birth_date:
          type: string
          format: date
      required:
      - birth_date
      - email
      - first_name
    CustomerProfile:
      type: object
      properties:
        email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        first_name:
          type: string
          nullable: true
          maxLength: 255
        birth_date:
          type: string
          format: date
          nullable: true
        bonus:
          type: integer
    EmployeeSchedule:
      type: object
      properties:
        title:
          type: string
          maxLength: 255
        monday:
          type: boolean
        monday_start_time:
          type: string
          format: time
          nullable: true
        monday_end_time:
          type: string
          format: time
          nullable: true
        tuesday:
          type: boolean
        tuesday_start_time:
          type: string
          format: time
          nullable: true
        tuesday_end_time:
          type: string
          format: time
          nullable: true
        wednesday:
          type: boolean
        wednesday_start_time:
          type: string
          format: time
          nullable: true
        wednesday_end_time:
          type: string
          format: time
          nullable: true
        thursday:
          type: boolean
        thursday_start_time:
          type: string
          format: time
          nullable: true
        thursday_end_time:
          type: string
          format: time
          nullable: true
        friday:
          type: boolean
        friday_start_time:
          type: string
          format: time
          nullable: true
        friday_end_time:
          type: string
          format: time
          nullable: true
        saturday:
          type: boolean
        saturday_start_time:
          type: string
          format: time
          nullable: true
        saturday_end_time:
          type: string
          format: time
          nullable: true
        sunday:
          type: boolean
        sunday_start_time:
          type: string
          format: time
          nullable: true
        sunday_end_time:
          type: string
          format: time
          nullable: true
      required:
      - title
    ExtraItem:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Название доп. продукта
          maxLength: 100
        type_extra_product:
          nullable: true
          title: Доп. Продукт
          oneOf:
          - $ref: '#/components/schemas/TypeExtraProductEnum'
          - $ref: '#/components/schemas/NullEnum'
        choice_category:
          type: integer
          nullable: true
      required:
      - id
      - name
    ExtraProduct:
      type: object
      properties:
        id:
          type: integer
      required:
      - id
    Ingredient:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 225
        quantity:
          type: integer
        measurement_unit:
          $ref: '#/components/schemas/MeasurementUnitEnum'
      required:
      - id
      - measurement_unit
      - name
      - quantity
    InventoryItem:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Наименование
          maxLength: 100
        quantity:
          type: integer
          title: Количество
        quantity_unit:
          allOf:
          - $ref: '#/components/schemas/QuantityUnitEnum'
          title: Единица измерения (Количество)
        limit:
          type: integer
          title: Лимит
        limit_unit:
          allOf:
          - $ref: '#/components/schemas/LimitUnitEnum'
          title: Единица измерения (Количество)
        category:
          $ref: '#/components/schemas/CategoryEnum'
        arrival_date:
          type: string
          format: date
        is_running_out:
          type: boolean
          title: Заканчивающийся продукт
        branch:
          type: integer
          title: Филиал
      required:
      - arrival_date
      - branch
      - category
      - id
      - limit_unit
      - name
      - quantity_unit
    ItemCanBeMadeResponse:
      type: object
      properties:
        message:
          type: string
      required:
      - message
    ItemCannotBeMadeResponse:
      type: object
      properties:
        message:
          type: string
      required:
      - message
    LimitUnitEnum:
      enum:
      - кг
      - гр
      - л
      - мл
      - шт
      type: string
      description: |-
        * `кг` - кг
        * `гр` - гр
        * `л` - л
        * `мл` - мл
        * `шт` - шт
    MeasurementUnitEnum:
      enum:
      - гр
      - кг
      - мл
      - л
      - шт
      type: string
      description: |-
        * `гр` - гр
        * `кг` - кг
        * `мл` - мл
        * `л` - л
        * `шт` - шт
    Menu:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Название
          maxLength: 100
        image:
          type: string
          format: uri
          nullable: true
          title: Фото блюда
        category:
          type: integer
          nullable: true
          title: Категория
        description:
          type: string
          title: Описание
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,5}(?:\.\d{0,2})?$
          title: Цена
        available:
          type: boolean
          title: В наличии
        ingredients:
          type: array
          items:
            $ref: '#/components/schemas/Ingredient'
      required:
      - description
      - id
      - name
      - price
    MenuItemDetail:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Название
          maxLength: 100
        description:
          type: string
          title: Описание
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,5}(?:\.\d{0,2})?$
          title: Цена
        image:
          type: string
          format: uri
          nullable: true
          title: Фото блюда
        ingredients:
          type: array
          items:
            type: object
            additionalProperties: {}
          readOnly: true
        available:
          type: boolean
          title: В наличии
        category:
          $ref: '#/components/schemas/Category'
        total_quantity:
          type: integer
          readOnly: true
      required:
      - category
      - description
      - id
      - ingredients
      - name
      - price
      - total_quantity
    NullEnum:
      enum:
      - null
    Order:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        branch_name:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
        total_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        bonuses_used:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        table_number:
          type: integer
          nullable: true
        order_type:
          $ref: '#/components/schemas/OrderTypeEnum'
        status:
          $ref: '#/components/schemas/StatusEnum'
        waiter:
          type: string
          nullable: true
        created:
          type: string
          format: date-time
        completed_at:
          type: string
          format: date-time
      required:
      - branch_name
      - completed_at
      - created
      - id
      - items
      - table_number
      - waiter
    OrderCustomer:
      type: object
      description: Serializer for customer orders.
      properties:
        id:
          type: integer
          readOnly: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderStaffItem'
        total_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          readOnly: true
        bonuses_used:
          type: integer
          minimum: 0
          nullable: true
        order_type:
          allOf:
          - $ref: '#/components/schemas/OrderTypeEnum'
          writeOnly: true
        user:
          type: integer
          nullable: true
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          writeOnly: true
        branch:
          type: integer
          nullable: true
        created:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        completed_at:
          type: string
          format: date-time
          nullable: true
      required:
      - id
      - order_type
      - status
      - total_price
    OrderDetailedList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        order_type:
          $ref: '#/components/schemas/OrderTypeEnum'
        status:
          $ref: '#/components/schemas/StatusEnum'
        user:
          type: integer
          nullable: true
        total_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        branch:
          type: integer
          nullable: true
        bonuses_used:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        waiter:
          type: integer
          nullable: true
        created:
          type: string
          format: date-time
          readOnly: true
        table:
          type: integer
          nullable: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderStaffItem'
          readOnly: true
        table_detail:
          allOf:
          - $ref: '#/components/schemas/Table'
          readOnly: true
      required:
      - created
      - id
      - items
      - table_detail
    OrderItem:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        item_name:
          type: string
        item_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,5}(?:\.\d{0,2})?$
        quantity:
          type: integer
        item_image:
          type: string
          format: uri
        item_id:
          type: integer
        item_category:
          type: string
        extra_product_names:
          type: string
          readOnly: true
      required:
      - extra_product_names
      - id
      - item_category
      - item_id
      - item_name
      - item_price
    OrderStaff:
      type: object
      description: Serializer for Order model.
      properties:
        id:
          type: integer
          readOnly: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderStaffItem'
        total_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          readOnly: true
        order_type:
          allOf:
          - $ref: '#/components/schemas/OrderTypeEnum'
          writeOnly: true
        table:
          type: integer
          nullable: true
        waiter:
          type: integer
          nullable: true
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          writeOnly: true
        branch:
          type: integer
          nullable: true
        created:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        completed_at:
          type: string
          format: date-time
          nullable: true
      required:
      - id
      - order_type
      - status
      - total_price
    OrderStaffItem:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        menu_id:
          type: integer
        menu_detail:
          type: string
          readOnly: true
        quantity:
          type: integer
        extra_product:
          type: array
          items:
            $ref: '#/components/schemas/ExtraProduct'
      required:
      - id
      - menu_detail
      - menu_id
    OrderTypeEnum:
      enum:
      - На вынос
      - В заведении
      type: string
      description: |-
        * `На вынос` - На вынос
        * `В заведении` - В заведении
    PatchedBranch:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        schedule:
          $ref: '#/components/schemas/Schedule'
        image:
          type: string
          format: uri
          nullable: true
        image_2:
          type: string
          format: uri
          nullable: true
        image_3:
          type: string
          format: uri
          nullable: true
        image_4:
          type: string
          format: uri
          nullable: true
        image_5:
          type: string
          format: uri
          nullable: true
        name:
          type: string
          maxLength: 100
        address:
          type: string
        phone_number:
          type: string
          maxLength: 128
        link_to_map:
          type: string
          format: uri
          maxLength: 200
        counts_of_tables:
          type: integer
    PatchedCategory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
          minLength: 3
        image:
          type: string
          format: uri
          nullable: true
          title: Фото категории
    PatchedExtraItem:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Название доп. продукта
          maxLength: 100
        type_extra_product:
          nullable: true
          title: Доп. Продукт
          oneOf:
          - $ref: '#/components/schemas/TypeExtraProductEnum'
          - $ref: '#/components/schemas/NullEnum'
        choice_category:
          type: integer
          nullable: true
    PatchedIngredient:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 225
        quantity:
          type: integer
        measurement_unit:
          $ref: '#/components/schemas/MeasurementUnitEnum'
    PatchedInventoryItem:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Наименование
          maxLength: 100
        quantity:
          type: integer
          title: Количество
        quantity_unit:
          allOf:
          - $ref: '#/components/schemas/QuantityUnitEnum'
          title: Единица измерения (Количество)
        limit:
          type: integer
          title: Лимит
        limit_unit:
          allOf:
          - $ref: '#/components/schemas/LimitUnitEnum'
          title: Единица измерения (Количество)
        category:
          $ref: '#/components/schemas/CategoryEnum'
        arrival_date:
          type: string
          format: date
        is_running_out:
          type: boolean
          title: Заканчивающийся продукт
        branch:
          type: integer
          title: Филиал
    PatchedMenu:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Название
          maxLength: 100
        image:
          type: string
          format: uri
          nullable: true
          title: Фото блюда
        category:
          type: integer
          nullable: true
          title: Категория
        description:
          type: string
          title: Описание
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,5}(?:\.\d{0,2})?$
          title: Цена
        available:
          type: boolean
          title: В наличии
        ingredients:
          type: array
          items:
            $ref: '#/components/schemas/Ingredient'
    PatchedOrderCustomer:
      type: object
      description: Serializer for customer orders.
      properties:
        id:
          type: integer
          readOnly: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderStaffItem'
        total_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          readOnly: true
        bonuses_used:
          type: integer
          minimum: 0
          nullable: true
        order_type:
          allOf:
          - $ref: '#/components/schemas/OrderTypeEnum'
          writeOnly: true
        user:
          type: integer
          nullable: true
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          writeOnly: true
        branch:
          type: integer
          nullable: true
        created:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        completed_at:
          type: string
          format: date-time
          nullable: true
    PatchedOrderStaff:
      type: object
      description: Serializer for Order model.
      properties:
        id:
          type: integer
          readOnly: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderStaffItem'
        total_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          readOnly: true
        order_type:
          allOf:
          - $ref: '#/components/schemas/OrderTypeEnum'
          writeOnly: true
        table:
          type: integer
          nullable: true
        waiter:
          type: integer
          nullable: true
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          writeOnly: true
        branch:
          type: integer
          nullable: true
        created:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        completed_at:
          type: string
          format: date-time
          nullable: true
    PatchedStaffCreate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        position:
          $ref: '#/components/schemas/PositionEnum'
        email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        username:
          type: string
          nullable: true
          maxLength: 255
        password:
          type: string
          nullable: true
          maxLength: 128
        first_name:
          type: string
          nullable: true
          maxLength: 255
        birth_date:
          type: string
          format: date
          nullable: true
        branch:
          type: integer
          nullable: true
        schedule:
          $ref: '#/components/schemas/EmployeeSchedule'
    PositionEnum:
      enum:
      - Бармен
      - Официант
      - Клиент
      - Админ
      type: string
      description: |-
        * `Бармен` - Бармен
        * `Официант` - Официант
        * `Клиент` - Клиент
        * `Админ` - Админ
    QuantityUnitEnum:
      enum:
      - кг
      - гр
      - л
      - мл
      - шт
      type: string
      description: |-
        * `кг` - кг
        * `гр` - гр
        * `л` - л
        * `мл` - мл
        * `шт` - шт
    Schedule:
      type: object
      properties:
        title:
          type: string
          maxLength: 255
        monday:
          type: boolean
        monday_start_time:
          type: string
          format: time
          nullable: true
        monday_end_time:
          type: string
          format: time
          nullable: true
        tuesday:
          type: boolean
        tuesday_start_time:
          type: string
          format: time
          nullable: true
        tuesday_end_time:
          type: string
          format: time
          nullable: true
        wednesday:
          type: boolean
        wednesday_start_time:
          type: string
          format: time
          nullable: true
        wednesday_end_time:
          type: string
          format: time
          nullable: true
        thursday:
          type: boolean
        thursday_start_time:
          type: string
          format: time
          nullable: true
        thursday_end_time:
          type: string
          format: time
          nullable: true
        friday:
          type: boolean
        friday_start_time:
          type: string
          format: time
          nullable: true
        friday_end_time:
          type: string
          format: time
          nullable: true
        saturday:
          type: boolean
        saturday_start_time:
          type: string
          format: time
          nullable: true
        saturday_end_time:
          type: string
          format: time
          nullable: true
        sunday:
          type: boolean
        sunday_start_time:
          type: string
          format: time
          nullable: true
        sunday_end_time:
          type: string
          format: time
          nullable: true
      required:
      - title
    StaffCreate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        position:
          $ref: '#/components/schemas/PositionEnum'
        email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        username:
          type: string
          nullable: true
          maxLength: 255
        password:
          type: string
          nullable: true
          maxLength: 128
        first_name:
          type: string
          nullable: true
          maxLength: 255
        birth_date:
          type: string
          format: date
          nullable: true
        branch:
          type: integer
          nullable: true
        schedule:
          $ref: '#/components/schemas/EmployeeSchedule'
      required:
      - id
      - schedule
    StatusEnum:
      enum:
      - Новый
      - В процессе
      - Готово
      - Отменено
      - Завершено
      type: string
      description: |-
        * `Новый` - Новый
        * `В процессе` - В процессе
        * `Готово` - Готово
        * `Отменено` - Отменено
        * `Завершено` - Завершено
    Table:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_number:
          type: integer
        is_available:
          type: boolean
        branch:
          type: integer
          nullable: true
      required:
      - id
      - table_number
    TableDetail:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_number:
          type: integer
        is_available:
          type: boolean
        orders:
          type: array
          items:
            type: object
            additionalProperties: {}
          readOnly: true
      required:
      - id
      - orders
      - table_number
    TypeExtraProductEnum:
      enum:
      - Молоко
      - Сироп
      type: string
      description: |-
        * `Молоко` - Молоко
        * `Сироп` - Сиропы
    UserIdResponse:
      type: object
      properties:
        id:
          type: integer
      required:
      - id
    UserOrders:
      type: object
      properties:
        opened_orders:
          type: object
          additionalProperties: {}
          readOnly: true
        closed_orders:
          type: object
          additionalProperties: {}
          readOnly: true
      required:
      - closed_orders
      - opened_orders
    WaiterLogin:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required:
      - password
      - username
    WaiterProfile:
      type: object
      properties:
        email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        first_name:
          type: string
          nullable: true
          maxLength: 255
        birth_date:
          type: string
          format: date
          nullable: true
        schedule:
          allOf:
          - $ref: '#/components/schemas/EmployeeSchedule'
          readOnly: true
      required:
      - schedule
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
