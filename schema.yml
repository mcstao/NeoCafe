openapi: 3.0.3
info:
  title: DRF NeoCafe API Project
  version: '0.1'
  description: NeoCafe
paths:
  /api/schema/:
    get:
      operationId: api_schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - api
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /barista/profile/:
    get:
      operationId: barista_profile_retrieve
      tags:
      - barista
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaristaProfile'
          description: ''
  /branches/:
    get:
      operationId: branches_list
      tags:
      - branches
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Branch'
          description: ''
    post:
      operationId: branches_create
      tags:
      - branches
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Branch'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Branch'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Branch'
        required: true
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Branch'
          description: ''
  /branches/{id}/:
    get:
      operationId: branches_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this branch.
        required: true
      tags:
      - branches
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Branch'
          description: ''
    put:
      operationId: branches_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this branch.
        required: true
      tags:
      - branches
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Branch'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Branch'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Branch'
        required: true
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Branch'
          description: ''
    patch:
      operationId: branches_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this branch.
        required: true
      tags:
      - branches
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBranch'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBranch'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBranch'
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Branch'
          description: ''
    delete:
      operationId: branches_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this branch.
        required: true
      tags:
      - branches
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /customers/profile/:
    get:
      operationId: customers_profile_retrieve
      tags:
      - customers
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerProfile'
          description: ''
  /customers/profile/edit/:
    put:
      operationId: customers_profile_edit_update
      tags:
      - customers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerEditProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomerEditProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomerEditProfile'
        required: true
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerEditProfile'
          description: ''
  /employees/staff/{id}/:
    get:
      operationId: employees_staff_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - employees
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaffCreate'
          description: ''
    put:
      operationId: employees_staff_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - employees
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StaffCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StaffCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StaffCreate'
        required: true
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaffCreate'
          description: ''
    patch:
      operationId: employees_staff_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - employees
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStaffCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStaffCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStaffCreate'
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaffCreate'
          description: ''
    delete:
      operationId: employees_staff_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - employees
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /employees/staff/create/:
    post:
      operationId: employees_staff_create_create
      tags:
      - employees
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StaffCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StaffCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StaffCreate'
        required: true
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaffCreate'
          description: ''
  /employees/staff/list/:
    get:
      operationId: employees_staff_list_list
      tags:
      - employees
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StaffCreate'
          description: ''
  /menu/categories/:
    get:
      operationId: menu_categories_list
      tags:
      - menu
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
          description: ''
    post:
      operationId: menu_categories_create
      tags:
      - menu
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
  /menu/categories/{id}/:
    get:
      operationId: menu_categories_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - menu
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    put:
      operationId: menu_categories_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - menu
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    patch:
      operationId: menu_categories_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - menu
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    delete:
      operationId: menu_categories_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - menu
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /menu/extra-items/:
    get:
      operationId: menu_extra_items_list
      tags:
      - menu
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExtraItem'
          description: ''
    post:
      operationId: menu_extra_items_create
      tags:
      - menu
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExtraItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExtraItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExtraItem'
        required: true
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtraItem'
          description: ''
  /menu/extra-items/{id}/:
    get:
      operationId: menu_extra_items_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this extra item.
        required: true
      tags:
      - menu
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtraItem'
          description: ''
    put:
      operationId: menu_extra_items_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this extra item.
        required: true
      tags:
      - menu
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExtraItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExtraItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExtraItem'
        required: true
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtraItem'
          description: ''
    patch:
      operationId: menu_extra_items_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this extra item.
        required: true
      tags:
      - menu
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedExtraItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedExtraItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedExtraItem'
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtraItem'
          description: ''
    delete:
      operationId: menu_extra_items_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this extra item.
        required: true
      tags:
      - menu
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /menu/ingredients/:
    get:
      operationId: menu_ingredients_list
      tags:
      - menu
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ingredient'
          description: ''
    post:
      operationId: menu_ingredients_create
      tags:
      - menu
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ingredient'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Ingredient'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Ingredient'
        required: true
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ingredient'
          description: ''
  /menu/ingredients/{id}/:
    get:
      operationId: menu_ingredients_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this ingredient.
        required: true
      tags:
      - menu
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ingredient'
          description: ''
    put:
      operationId: menu_ingredients_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this ingredient.
        required: true
      tags:
      - menu
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ingredient'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Ingredient'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Ingredient'
        required: true
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ingredient'
          description: ''
    patch:
      operationId: menu_ingredients_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this ingredient.
        required: true
      tags:
      - menu
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedIngredient'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedIngredient'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedIngredient'
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ingredient'
          description: ''
    delete:
      operationId: menu_ingredients_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this ingredient.
        required: true
      tags:
      - menu
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /menu/menus/:
    get:
      operationId: menu_menus_list
      tags:
      - menu
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Menu'
          description: ''
    post:
      operationId: menu_menus_create
      tags:
      - menu
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Menu'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Menu'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Menu'
        required: true
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Menu'
          description: ''
  /menu/menus/{id}/:
    get:
      operationId: menu_menus_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this menu.
        required: true
      tags:
      - menu
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Menu'
          description: ''
    put:
      operationId: menu_menus_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this menu.
        required: true
      tags:
      - menu
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Menu'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Menu'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Menu'
        required: true
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Menu'
          description: ''
    patch:
      operationId: menu_menus_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this menu.
        required: true
      tags:
      - menu
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMenu'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMenu'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMenu'
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Menu'
          description: ''
    delete:
      operationId: menu_menus_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this menu.
        required: true
      tags:
      - menu
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /orders/create/:
    post:
      operationId: orders_create_create
      tags:
      - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Order'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Order'
        required: true
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
  /orders/history/:
    get:
      operationId: orders_history_list
      tags:
      - orders
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderHistory'
          description: ''
  /storage/:
    get:
      operationId: storage_list
      tags:
      - storage
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InventoryItem'
          description: ''
    post:
      operationId: storage_create
      tags:
      - storage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InventoryItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InventoryItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InventoryItem'
        required: true
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryItem'
          description: ''
  /storage/{id}/:
    get:
      operationId: storage_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this inventory item.
        required: true
      tags:
      - storage
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryItem'
          description: ''
    put:
      operationId: storage_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this inventory item.
        required: true
      tags:
      - storage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InventoryItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InventoryItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InventoryItem'
        required: true
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryItem'
          description: ''
    patch:
      operationId: storage_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this inventory item.
        required: true
      tags:
      - storage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedInventoryItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedInventoryItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedInventoryItem'
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryItem'
          description: ''
    delete:
      operationId: storage_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this inventory item.
        required: true
      tags:
      - storage
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /users/login/admin/:
    post:
      operationId: users_login_admin_create
      description: Этот эндпоинт служит для входа админа
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminLogin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminLogin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdminLogin'
        required: true
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                example:
                  refresh: token
                  access: token
          description: ''
  /users/login/barista/:
    post:
      operationId: users_login_barista_create
      description: Этот эндпоинт предназначен для входа бармена.
      tags:
      - users
      requestBody:
        content:
          content:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
              required:
              - email
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                example:
                  message: Введите 4-значный код, отправленный на почту example@gmail.com
                  pre_token: your_pre_token_here
          description: ''
  /users/login/barista/confirm/:
    post:
      operationId: users_login_barista_confirm_create
      description: Этот эндпоинт служит для подтверждении входа сотрудников по коду
      tags:
      - users
      requestBody:
        content:
          headers:
            schema:
              type: object
              properties:
                Authorization: pre_token
              required:
              - Authorization
              example:
                Authorization: pre_token
          content:
            schema:
              type: object
              properties:
                otp:
                  type: string
                email:
                  type: string
                  format: email
              required:
              - otp
              - email
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                example:
                  refresh: token
                  access: token
          description: ''
  /users/login/customer/:
    post:
      operationId: users_login_customer_create
      description: Этот эндпоинт предназначен для входа клиентов.
      tags:
      - users
      requestBody:
        content:
          content:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
              required:
              - email
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                example:
                  message: Введите 4-значный код, отправленный на почту example@gmail.com
                  pre_token: your_pre_token_here
          description: ''
  /users/login/customer/confirm/:
    post:
      operationId: users_login_customer_confirm_create
      description: Этот эндпоинт служит для подтверждении входа клиентов по коду
      tags:
      - users
      requestBody:
        content:
          headers:
            schema:
              type: object
              properties:
                Authorization: pre_token
              required:
              - Authorization
              example:
                Authorization: pre_token
          content:
            schema:
              type: object
              properties:
                otp:
                  type: string
                email:
                  type: string
                  format: email
              required:
              - otp
              - email
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                example:
                  refresh: token
                  access: token
          description: ''
  /users/login/waiter/:
    post:
      operationId: users_login_waiter_create
      description: Этот эндпоинт предназначен для входа официантов.
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WaiterLogin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WaiterLogin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WaiterLogin'
        required: true
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                example:
                  message: Введите 4-значный код, отправленный на почту example@gmail.com
                  pre_token: your_pre_token_here
          description: ''
  /users/login/waiter/confirm/:
    post:
      operationId: users_login_waiter_confirm_create
      description: Этот эндпоинт служит для подтверждении входа сотрудников по коду
      tags:
      - users
      requestBody:
        content:
          headers:
            schema:
              type: object
              properties:
                Authorization: pre_token
              required:
              - Authorization
              example:
                Authorization: pre_token
          content:
            schema:
              type: object
              properties:
                otp:
                  type: string
                email:
                  type: string
                  format: email
              required:
              - otp
              - email
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                example:
                  refresh: token
                  access: token
          description: ''
  /users/register/customer/:
    post:
      operationId: users_register_customer_create
      description: Этот эндпоинт предназначен для регистрации клиентов.
      tags:
      - users
      requestBody:
        content:
          content:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
              required:
              - email
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                example:
                  message: Введите 4-значный код, отправленный на почту example@gmail.com
                  pre_token: your_pre_token_here
          description: ''
  /users/resend-code/:
    get:
      operationId: users_resend_code_retrieve
      description: Повторная отправка кода Ожидается, что клиент передаст pre_token
        пользователя в заголовке Authorization.
      tags:
      - users
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                example:
                  detail: Код был отправлен заново
          description: ''
  /users/verify/email/:
    post:
      operationId: users_verify_email_create
      description: Этот эндпоинт служит для подтверждении регистрации пользователей
      tags:
      - users
      requestBody:
        content:
          headers:
            schema:
              type: object
              properties:
                Authorization: pre_token
              required:
              - Authorization
              example:
                Authorization: pre_token
          content:
            schema:
              type: object
              properties:
                otp:
                  type: string
                email:
                  type: string
                  format: email
              required:
              - otp
              - email
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                example:
                  message: Поздравляем, ваш адрес электронной почты подтвержден!
                  refresh: token
                  access: token
          description: ''
  /waiters/profile/:
    get:
      operationId: waiters_profile_retrieve
      tags:
      - waiters
      security:
      - tokenAuth: []
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WaiterProfile'
          description: ''
components:
  schemas:
    AdminLogin:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required:
      - password
      - username
    BaristaProfile:
      type: object
      properties:
        email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        first_name:
          type: string
          nullable: true
          maxLength: 255
        birth_date:
          type: string
          format: date
          nullable: true
        schedule:
          allOf:
          - $ref: '#/components/schemas/EmployeeSchedule'
          readOnly: true
      required:
      - schedule
    Branch:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        schedule:
          $ref: '#/components/schemas/Schedule'
        image:
          type: string
          format: uri
          nullable: true
        name:
          type: string
          maxLength: 100
        address:
          type: string
        phone_number:
          type: string
          maxLength: 128
        link_to_map:
          type: string
          format: uri
          maxLength: 200
        counts_of_tables:
          type: integer
      required:
      - address
      - id
      - link_to_map
      - phone_number
      - schedule
    Category:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
          minLength: 3
      required:
      - id
    CategoryEnum:
      enum:
      - Готовые продукты
      - Сырье
      type: string
      description: |-
        * `Готовые продукты` - Готовые продукты
        * `Сырье` - Сырье
    CustomerEditProfile:
      type: object
      properties:
        first_name:
          type: string
        email:
          type: string
          format: email
          readOnly: true
        birth_date:
          type: string
          format: date
      required:
      - birth_date
      - email
      - first_name
    CustomerProfile:
      type: object
      properties:
        email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        first_name:
          type: string
          nullable: true
          maxLength: 255
        birth_date:
          type: string
          format: date
          nullable: true
        bonus:
          type: integer
        orders:
          allOf:
          - $ref: '#/components/schemas/OrderHistory'
          readOnly: true
      required:
      - orders
    EmployeeSchedule:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        description:
          type: string
          nullable: true
        monday:
          type: boolean
        monday_start_time:
          type: string
          format: time
          nullable: true
        monday_end_time:
          type: string
          format: time
          nullable: true
        tuesday:
          type: boolean
        tuesday_start_time:
          type: string
          format: time
          nullable: true
        tuesday_end_time:
          type: string
          format: time
          nullable: true
        wednesday:
          type: boolean
        wednesday_start_time:
          type: string
          format: time
          nullable: true
        wednesday_end_time:
          type: string
          format: time
          nullable: true
        thursday:
          type: boolean
        thursday_start_time:
          type: string
          format: time
          nullable: true
        thursday_end_time:
          type: string
          format: time
          nullable: true
        friday:
          type: boolean
        friday_start_time:
          type: string
          format: time
          nullable: true
        friday_end_time:
          type: string
          format: time
          nullable: true
        saturday:
          type: boolean
        saturday_start_time:
          type: string
          format: time
          nullable: true
        saturday_end_time:
          type: string
          format: time
          nullable: true
        sunday:
          type: boolean
        sunday_start_time:
          type: string
          format: time
          nullable: true
        sunday_end_time:
          type: string
          format: time
          nullable: true
      required:
      - id
      - title
    ExtraItem:
      type: object
      properties:
        name:
          type: string
          title: Название доп. продукта
          maxLength: 100
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,5}(?:\.\d{0,2})?$
          title: Цена
        type_extra_product:
          nullable: true
          title: Доп. Продукт
          oneOf:
          - $ref: '#/components/schemas/TypeExtraProductEnum'
          - $ref: '#/components/schemas/NullEnum'
        choice_category:
          type: integer
          nullable: true
      required:
      - name
      - price
    Ingredient:
      type: object
      properties:
        name:
          type: string
          maxLength: 225
        quantity:
          type: integer
        measurement_unit:
          $ref: '#/components/schemas/MeasurementUnitEnum'
      required:
      - measurement_unit
      - name
      - quantity
    InventoryItem:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Наименование
          maxLength: 100
        quantity:
          type: integer
          title: Количество
        quantity_unit:
          allOf:
          - $ref: '#/components/schemas/QuantityUnitEnum'
          title: Единица измерения (Количество)
        limit:
          type: integer
          title: Лимит
        limit_unit:
          allOf:
          - $ref: '#/components/schemas/LimitUnitEnum'
          title: Единица измерения (Количество)
        category:
          $ref: '#/components/schemas/CategoryEnum'
        arrival_date:
          type: string
          format: date
          title: Дата прихода
        is_running_out:
          type: boolean
          title: Заканчивающийся продукт
        branch:
          type: integer
          title: Филиал
      required:
      - arrival_date
      - branch
      - category
      - id
      - limit_unit
      - name
      - quantity_unit
    LimitUnitEnum:
      enum:
      - кг
      - г
      - л
      - мл
      - шт
      type: string
      description: |-
        * `кг` - кг
        * `г` - г
        * `л` - л
        * `мл` - мл
        * `шт` - шт
    MTO:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        menu_detail:
          allOf:
          - $ref: '#/components/schemas/OrderMenuHistory'
          readOnly: true
        menu:
          type: integer
        menu_quantity:
          type: integer
        extra_product:
          type: array
          items:
            type: integer
        extra_product_detail:
          type: array
          items:
            $ref: '#/components/schemas/OrderExtraProduct'
          readOnly: true
        extra_product_quantity:
          type: integer
      required:
      - extra_product_detail
      - id
      - menu
      - menu_detail
    MeasurementUnitEnum:
      enum:
      - гр
      - кг
      - мл
      - л
      - шт
      type: string
      description: |-
        * `гр` - гр
        * `кг` - кг
        * `мл` - мл
        * `л` - л
        * `шт` - шт
    Menu:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Название
          maxLength: 100
        image:
          type: string
          format: uri
          nullable: true
          title: Фото блюда
        category:
          type: integer
          nullable: true
          title: Категория
        description:
          type: string
          title: Описание
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,5}(?:\.\d{0,2})?$
          title: Цена
        available:
          type: boolean
          title: В наличии
        branch:
          type: integer
          nullable: true
          title: Филиал
        ingredients:
          type: array
          items:
            $ref: '#/components/schemas/Ingredient'
      required:
      - description
      - id
      - ingredients
      - name
      - price
    NullEnum:
      enum:
      - null
    Order:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        order_type:
          $ref: '#/components/schemas/OrderTypeEnum'
        branch:
          type: integer
          nullable: true
        user:
          type: integer
          nullable: true
        bonuses_used:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        created:
          type: string
          format: date-time
          readOnly: true
        total_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        cashback:
          type: string
          readOnly: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/MTO'
      required:
      - cashback
      - created
      - id
      - items
    OrderBranchInHistory:
      type: object
      properties:
        image:
          type: string
          format: uri
          nullable: true
        name:
          type: string
          maxLength: 100
    OrderExtraProduct:
      type: object
      properties:
        name:
          type: string
          title: Название доп. продукта
          maxLength: 100
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,5}(?:\.\d{0,2})?$
          title: Цена
      required:
      - name
      - price
    OrderHistory:
      type: object
      properties:
        branch:
          $ref: '#/components/schemas/OrderBranchInHistory'
        bonuses_used:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        created:
          type: string
          format: date-time
          readOnly: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/MTO'
      required:
      - branch
      - created
      - items
    OrderMenuHistory:
      type: object
      properties:
        image:
          type: string
          format: uri
          nullable: true
          title: Фото блюда
        name:
          type: string
          title: Название
          maxLength: 100
        description:
          type: string
          title: Описание
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,5}(?:\.\d{0,2})?$
          title: Цена
      required:
      - description
      - name
      - price
    OrderTypeEnum:
      enum:
      - takeaway
      - inplace
      type: string
      description: |-
        * `takeaway` - На вынос
        * `inplace` - В заведении
    PatchedBranch:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        schedule:
          $ref: '#/components/schemas/Schedule'
        image:
          type: string
          format: uri
          nullable: true
        name:
          type: string
          maxLength: 100
        address:
          type: string
        phone_number:
          type: string
          maxLength: 128
        link_to_map:
          type: string
          format: uri
          maxLength: 200
        counts_of_tables:
          type: integer
    PatchedCategory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
          minLength: 3
    PatchedExtraItem:
      type: object
      properties:
        name:
          type: string
          title: Название доп. продукта
          maxLength: 100
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,5}(?:\.\d{0,2})?$
          title: Цена
        type_extra_product:
          nullable: true
          title: Доп. Продукт
          oneOf:
          - $ref: '#/components/schemas/TypeExtraProductEnum'
          - $ref: '#/components/schemas/NullEnum'
        choice_category:
          type: integer
          nullable: true
    PatchedIngredient:
      type: object
      properties:
        name:
          type: string
          maxLength: 225
        quantity:
          type: integer
        measurement_unit:
          $ref: '#/components/schemas/MeasurementUnitEnum'
    PatchedInventoryItem:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Наименование
          maxLength: 100
        quantity:
          type: integer
          title: Количество
        quantity_unit:
          allOf:
          - $ref: '#/components/schemas/QuantityUnitEnum'
          title: Единица измерения (Количество)
        limit:
          type: integer
          title: Лимит
        limit_unit:
          allOf:
          - $ref: '#/components/schemas/LimitUnitEnum'
          title: Единица измерения (Количество)
        category:
          $ref: '#/components/schemas/CategoryEnum'
        arrival_date:
          type: string
          format: date
          title: Дата прихода
        is_running_out:
          type: boolean
          title: Заканчивающийся продукт
        branch:
          type: integer
          title: Филиал
    PatchedMenu:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Название
          maxLength: 100
        image:
          type: string
          format: uri
          nullable: true
          title: Фото блюда
        category:
          type: integer
          nullable: true
          title: Категория
        description:
          type: string
          title: Описание
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,5}(?:\.\d{0,2})?$
          title: Цена
        available:
          type: boolean
          title: В наличии
        branch:
          type: integer
          nullable: true
          title: Филиал
        ingredients:
          type: array
          items:
            $ref: '#/components/schemas/Ingredient'
    PatchedStaffCreate:
      type: object
      properties:
        email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        password:
          type: string
          nullable: true
          maxLength: 128
        first_name:
          type: string
          nullable: true
          maxLength: 255
        last_name:
          type: string
          nullable: true
          maxLength: 255
        birth_date:
          type: string
          format: date
          nullable: true
        branch:
          type: integer
          nullable: true
        position:
          $ref: '#/components/schemas/PositionEnum'
        schedule:
          $ref: '#/components/schemas/EmployeeSchedule'
    PositionEnum:
      enum:
      - barista
      - waiter
      - client
      - admin
      type: string
      description: |-
        * `barista` - Barista
        * `waiter` - Waiter
        * `client` - Client
        * `admin` - Admin
    QuantityUnitEnum:
      enum:
      - кг
      - г
      - л
      - мл
      - шт
      type: string
      description: |-
        * `кг` - кг
        * `г` - г
        * `л` - л
        * `мл` - мл
        * `шт` - шт
    Schedule:
      type: object
      properties:
        monday:
          type: boolean
        monday_start_time:
          type: string
          format: time
          nullable: true
        monday_end_time:
          type: string
          format: time
          nullable: true
        tuesday:
          type: boolean
        tuesday_start_time:
          type: string
          format: time
          nullable: true
        tuesday_end_time:
          type: string
          format: time
          nullable: true
        wednesday:
          type: boolean
        wednesday_start_time:
          type: string
          format: time
          nullable: true
        wednesday_end_time:
          type: string
          format: time
          nullable: true
        thursday:
          type: boolean
        thursday_start_time:
          type: string
          format: time
          nullable: true
        thursday_end_time:
          type: string
          format: time
          nullable: true
        friday:
          type: boolean
        friday_start_time:
          type: string
          format: time
          nullable: true
        friday_end_time:
          type: string
          format: time
          nullable: true
        saturday:
          type: boolean
        saturday_start_time:
          type: string
          format: time
          nullable: true
        saturday_end_time:
          type: string
          format: time
          nullable: true
        sunday:
          type: boolean
        sunday_start_time:
          type: string
          format: time
          nullable: true
        sunday_end_time:
          type: string
          format: time
          nullable: true
    StaffCreate:
      type: object
      properties:
        email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        password:
          type: string
          nullable: true
          maxLength: 128
        first_name:
          type: string
          nullable: true
          maxLength: 255
        last_name:
          type: string
          nullable: true
          maxLength: 255
        birth_date:
          type: string
          format: date
          nullable: true
        branch:
          type: integer
          nullable: true
        position:
          $ref: '#/components/schemas/PositionEnum'
        schedule:
          $ref: '#/components/schemas/EmployeeSchedule'
      required:
      - schedule
    TypeExtraProductEnum:
      enum:
      - Milk
      - Syrup
      type: string
      description: |-
        * `Milk` - Молоко
        * `Syrup` - Сиропы
    WaiterLogin:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required:
      - password
      - username
    WaiterProfile:
      type: object
      properties:
        email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        first_name:
          type: string
          nullable: true
          maxLength: 255
        birth_date:
          type: string
          format: date
          nullable: true
        schedule:
          allOf:
          - $ref: '#/components/schemas/EmployeeSchedule'
          readOnly: true
      required:
      - schedule
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
